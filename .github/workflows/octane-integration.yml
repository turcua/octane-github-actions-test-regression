name: OctaneIntegration
# Events the integration should be triggered on
on:
  pull_request:
    types: [opened, edited, closed, reopened]
    branches: [ 'master', 'test-branch', 'second-branch' ]
  workflow_run:
    # List of workflows to integrate with ALM Octane
    workflows: [Java CI with Maven]
    types: [requested, completed]
    branches: [ 'master', 'test-branch', 'second-branch' ]
# Node configuration for allowing HTTPS requests
env:
  NODE_TLS_REJECT_UNAUTHORIZED: 0
jobs:
  octane_integration_job:
    # List of runner tags
    runs-on: [self-hosted]
    name: OctaneIntegration#${{github.event.action}}#${{github.event.workflow_run.id}}
    steps:
      - uses: actions/checkout@v4
      - name: GitHub Actions ALM Octane Integration
        # Reference to our public GitHub action
        uses: MicroFocus/alm-octane-github-actions-integration@v23.3.0
        id: gitHubActionsIntegration
        # Config parameters for the integration
        with:
          # ALM Octane connection data
          octaneUrl: 'https://almoctane-eur.saas.microfocus.com'
          #octaneUrl: 'https://falcon-apt-usually.ngrok-free.app/dev'
          octaneSharedSpace: 78006
          octaneWorkspace: 58001
          octaneClientId: ${{secrets.ALM_OCTANE_CLIENT_ID}}
          octaneClientSecret: ${{secrets.ALM_OCTANE_CLIENT_SECRET}}
          # Automatically provided GitHub token
          githubToken: ${{secrets.GITHUB_TOKEN}}
          # The url that the CI Server in ALM Octane will point to (own)
          serverBaseUrl: https://github.com/turcua/octane-github-actions-test-regression
          # Pattern for identifying JUnit style report files for test result injection in ALM Octane
          unitTestResultsGlobPattern: "**/*.xml"
